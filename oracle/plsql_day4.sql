CREATE OR REPLACE TRIGGER TRIG_SYUSER
BEFORE INSERT ON SYUSER
FOR EACH ROW
DECLARE
    USERNAME VARCHAR2(64);
BEGIN
    SELECT USER INTO USERNAME
    FROM DUAL;
    :new.USERID := SEQ_USER_ID.NEXTVAL;
    :new.CREATED := SYSDATE;    
    :new.CREATEDBY := USERNAME;
    :new.version := 1;
END;    


CREATE OR REPLACE TRIGGER TRIG_UP_SYUSER
BEFORE UPDATE ON SYUSER
FOR EACH ROW
BEGIN
    :new.version := :old.version+1;
END;


ALTER TRIGGER TRIG_SYUSER ENABLE;

DROP TABLE SYUSER;
DROP SEQUENCE SEQ_USER_ID;    

CREATE SEQUENCE SEQ_USER_ID;    

INSERT INTO SYUSER(USERNAME,PASSWORD) VALUES('krishna','mypass');

CREATE TABLE SYUSER(
    USERID  INTEGER PRIMARY KEY,
    USERNAME VARCHAR2(64),
    PASSWORD VARCHAR2(256),
    CREATED DATE,
    CREATEDBY VARCHAR(64),
    VERSION INTEGER
);

SELECT USER FROM DUAL;
SELECT * FROM SYUSER;

UPDATE SYUSER SET password='secret' WHERE USERID=2;


CREATE TABLE TRANSACTION 
( 
    ID INTEGER, 
    ACCOUNT_NO INTEGER, 
    AMOUNT NUMERIC(12,2), 
    TRANSACTION_TYPE CHAR(1),     
    BALANCE NUMERIC(12,2) 
);

INSERT INTO TRANSACTION VALUES(2,1,5000,'C',15000);
INSERT INTO TRANSACTION VALUES(3,1,2000,'D',13000);
INSERT INTO TRANSACTION VALUES(4,2,2000,'C',2000);
INSERT INTO TRANSACTION(ID,ACCOUNT_NO,AMOUNT,TRANSACTION_TYPE) VALUES(4,2,4000,'C');


CREATE OR REPLACE TRIGGER TRIG_UP_SYUSER 
BEFORE UPDATE ON SYUSER 
FOR EACH ROW 
BEGIN 
    :new.version := :old.version+1; 
END;


CREATE OR REPLACE TRIGGER TRIG_IN_TRANS 
BEFORE INSERT ON TRANSACTION 
FOR EACH ROW 
DECLARE  
    v_balance NUMERIC(12,2); 
BEGIN 
    SELECT SUM(AMOUNT) INTO v_balance FROM TRANSACTION WHERE ACCOUNT_NO = :new.ACCOUNT_NO; 
    IF :new.TRANSACTION_TYPE = 'C' THEN 
        :new.BALANCE := v_balance + :new.AMOUNT; 
    ELSE 
        :new.BALANCE := v_balance - :new.AMOUNT; 
    END IF; 
END;

CREATE OR REPLACE TRIGGER TRIG_IN_TRANS 
AFTER INSERT ON TRANSACTION 
FOR EACH ROW 
DECLARE  
    PRAGMA AUTONOMOUS_TRANSACTION;
    v_balance NUMERIC(12,2); 
BEGIN 
    SELECT SUM(AMOUNT) INTO v_balance FROM TRANSACTION WHERE ACCOUNT_NO = :new.ACCOUNT_NO; 
END;



